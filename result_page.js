'use strict';

var htmlJSResults = {};
var trhValues = {
    'wordCount_trh': 13845,
    'distinctWordCount_trh': 3552,
    'avgWordLength_trh': 13,
    'tagCount_trh': 567,
    'urlCount_trh': 80,
    'iframeCount_trh': 5,
    'zeroIFrameCount_trh': 2,
    'dblDoc_trh': 'yes',
    'eval_trh': '-',
    'escape_trh': '-',
    'link_trh': '-',
    'exec_trh': '-',
    'unescape_trh': '-',
    'search_trh': '-',
    'unbound_trh': '-',
    'sum_trh': 29,
    'avgExec_trh': '80% of maximum execution time',
    'maxExec_trh': 1562
};

var indicOne = 0;
var indicTwo = 0;
var avgIndic = 0;


// Get html elements for threshold values
for (var name in trhValues) {
    document.getElementById(name).innerText = trhValues[name];
}

var urlField     = document.getElementById('examinedUrl');
var avgExecField = document.getElementById('avgExec_val');
var maxExecField = document.getElementById('maxExec_val');

chrome.storage.sync.get('currentUrl', function(data) {
    urlField.innerText = urlField.innerText + data.currentUrl;
});

// Get maximumg time and display hints if necessary
chrome.storage.sync.get('maxTime', function(data) {

    maxExecField.innerText = data.maxTime;
    avgIndic = 0.8 * data.maxTime;

    /* Only increase indicator if max time above thresholds
       URL count later requests indicator and makes classification if it is
       lower than the threshold */
    if (data.maxTime === 0) {
        document.getElementById('note').style.visibility = 'visible';
    } else if (data.maxTime > trhValues['maxExec_trh']) {
        maxExecField.classList.add('warning');
        indicTwo = 1;
    }
});

// Get average time and display hints if necessary
chrome.storage.sync.get('avgTime', function(data) {

    avgExecField.innerText = data.avgTime;

    if (data.avgTime === 0) {
        document.getElementById('note').style.visibility = 'visible';
    } else if (data.avgTime > avgIndic) {
        avgExecField.classList.add('warning');
        document.getElementById('redFieldsNote').style.visibility = 'visible';
        document.getElementById('redFieldsNote').innerText +=
            'Average script execution time is suspicious.';
    }
});

// Get html an js results and apply them to the view
chrome.storage.sync.get('html_js_results', function(data) {

    htmlJSResults = data.html_js_results;

    for (var name in htmlJSResults) {

        var trh_name = name.replace('_val', '_trh');
        var elem = document.getElementById(name);
        elem.innerText = htmlJSResults[name];

        // Check for the boolean and make it readable
        if (name === 'dblDoc_val' && htmlJSResults[name]) {
            elem.innerText = 'yes';
            elem.classList.add('warning');
            continue;
        } else if (name === 'dblDoc_val' && !htmlJSResults[name]) {
            elem.innerText = 'no';
            continue;
        }

        // Calculate if indicator group features are malicious
        if ((name === 'wordCount_val'
            || name === 'distinctWordCount_val'
            || name === 'avgWordLength_val')
            && htmlJSResults[name] <= [trh_name]) {

                indicOne += 1;
                elem.classList.add('warning');
        }

        // If all three features are malicious, classify website
        if (indicOne === 3) {
            document.getElementById('redFieldsNote').style.visibility = 'visible';
            document.getElementById('redFieldsNote').innerText +=
                'Word count & Distinct word count ' +
                '& average word length are suspicious.';
            indicOne = O;
        }

        // Classify malicious if URLs below threshold and maxExec time above
        if (name === 'urlCount_val'
            && htmlJSResults[name] < trhValues[trh_name]
            && indicOne === 1) {

            elem.classList.add('warning');
            document.getElementById('maxExec_val').classList.add('warning');
            document.getElementById('redFieldsNote').style.visibility = 'visible';
            document.getElementById('redFieldsNote').innerText +=
                'Maximum execution time and count of URLs are suspicious.';
            indicOne = 0; // Reset for next execution
        }


        // Classify malicious if iFrame count above threshold
        if (name === 'iframeCount_val' && htmlJSResults[name] > trhValues[trh_name]) {
            elem.classList.add('warning');
            document.getElementById('redFieldsNote').style.visibility = 'visible';
            document.getElementById('redFieldsNote').innerText +=
                'Number of iFrames is suspicious.';
        }

        // Classify malicious if zero / invisible iFrame count above threshold
        if (name === 'zeroIFrameCount_val' && htmlJSResults[name] > trhValues[trh_name]) {
            elem.classList.add('warning');
            document.getElementById('redFieldsNote').style.visibility = 'visible';
            document.getElementById('redFieldsNote').innerText +=
                'Number of zero / invisible iFrames is suspicious.';
        }

        // Classify malicious if sum of JS functions above threshold
        if (name === 'sum_val' && htmlJSResults[name] > trhValues[trh_name]) {
            elem.classList.add('warning');
            document.getElementById('redFieldsNote').style.visibility = 'visible';
            document.getElementById('redFieldsNote').innerText +=
                'Sum of suspicious JavaScript functions indicates malware.';
        }
    }
});